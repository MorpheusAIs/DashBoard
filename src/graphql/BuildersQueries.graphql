fragment BuilderUserDefault on BuilderUser {
  id
  address
  staked
  claimed
  claimLockEnd
}

fragment BuilderSubnetDefault on BuilderSubnet {
  id
  name
  owner
  minStake
  fee
  feeTreasury
  startsAt
  withdrawLockPeriodAfterStake
  minClaimLockEnd
  slug
  description
  website
  image
  totalStaked
  totalClaimed
  totalUsers
  builderUsers {
    ...BuilderUserDefault
  }
}

query getBuilderSubnet($id: ID! = "") {
  builderSubnet(id: $id) {
    ...BuilderSubnetDefault
  }
}

query getBuilderSubnetUsers(
  $first: Int = 10
  $skip: Int = 10
  $builderSubnetId: Bytes = ""
) {
  builderUsers(
    first: $first
    skip: $skip
    where: { builderSubnet_: {id: $builderSubnetId} }
  ) {
    ...BuilderUserDefault
  }
}

query getUserAccountBuilderSubnets($address: Bytes = "", $builder_subnet_id: Bytes = "") {
  builderUsers(where: {address: $address, builderSubnet_: {id: $builder_subnet_id}}) {
    ...BuilderUserDefault
    builderSubnet {
      ...BuilderSubnetDefault
    }
  }
}

query combinedBuilderSubnets(
  $first: Int = 10
  $skip: Int = 10
  $orderBy: BuilderSubnet_orderBy
  $orderDirection: OrderDirection
  $usersOrderBy: BuilderUser_orderBy
  $usersDirection: OrderDirection

  $address: Bytes = ""
) {
  builderSubnets(
    first: $first
    skip: $skip
    orderBy: $orderBy
    orderDirection: $orderDirection
  ) {
    ...BuilderSubnetDefault
  }


  builderUsers(
    orderBy: $usersOrderBy
    orderDirection: $usersDirection
    where: {address: $address}
  ) {
    ...BuilderUserDefault
    builderSubnet {
      ...BuilderSubnetDefault
    }
  }

  counters {
    id
    totalSubnets
    totalBuilderProjects
  }
}

# TEMP: To filter by name
query combinedBuilderSubnetsFilteredByPredefinedBuilders(
  $orderBy: BuilderSubnet_orderBy
  $usersOrderBy: BuilderUser_orderBy
  $usersDirection: OrderDirection
  $orderDirection: OrderDirection
  $name_in: [String!] = ""
  $address: Bytes = ""
) {
  builderSubnets(
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: {name_in: $name_in}
  ) {
    ...BuilderSubnetDefault
  }


  builderUsers(
    orderBy: $usersOrderBy
    orderDirection: $usersDirection
    where: {
      address: $address
      builderSubnet_: {name_in: $name_in}
    }
  ) {
    ...BuilderUserDefault
    builderSubnet {
      ...BuilderSubnetDefault
    }
  }
}
